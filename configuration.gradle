
project.ext {

  cfgVersion = "0.17.2"
  
  cfgGroup = "org.openmuc.framework"

  cfgCopyDependencies = false

  cfgCopyToRoot = true

  cfgSignPom = true

  cfgRepository = project.properties.sonatypeRepository

  cfgSnapshotRepository = project.properties.sonatypeSnapshotRepository

  cfgRepositoryUser = project.properties.sonatypeUser

  cfgRepositoryPass = project.properties.sonatypePass

  javaProjects = subprojects
  
  jarDefaultImportPackageVersion = ";version=0"

  distributionProjects = javaProjects.findAll {
    it.getPath() == ":openmuc-app-simpledemo" ||
    it.getPath() == ":openmuc-core-api" ||
    it.getPath() == ":openmuc-core-datamanager" ||
    it.getPath() == ":openmuc-core-spi" ||
    it.getPath() == ":openmuc-datalogger-ascii" ||
    it.getPath() == ":openmuc-datalogger-slotsdb" ||
    it.getPath() == ":openmuc-driver-aggregator" ||
    it.getPath() == ":openmuc-driver-csv" ||
    it.getPath() == ":openmuc-driver-dlms" ||
    it.getPath() == ":openmuc-driver-ehz" ||
    it.getPath() == ":openmuc-driver-iec60870" ||
    it.getPath() == ":openmuc-driver-iec61850" ||
    it.getPath() == ":openmuc-driver-iec62056p21" ||
    it.getPath() == ":openmuc-driver-knx" ||
    it.getPath() == ":openmuc-driver-mbus" ||
    it.getPath() == ":openmuc-driver-modbus" ||
    it.getPath() == ":openmuc-driver-rest" ||
    it.getPath() == ":openmuc-driver-rpi-gpio" ||
    it.getPath() == ":openmuc-driver-rpi-w1" ||
    it.getPath() == ":openmuc-driver-snmp" ||
    it.getPath() == ":openmuc-driver-wmbus" ||
    it.getPath() == ":openmuc-server-modbus" ||
    it.getPath() == ":openmuc-server-opcua" ||
    it.getPath() == ":openmuc-server-restws" ||
    it.getPath() == ":openmuc-webui-base" ||
    it.getPath() == ":openmuc-webui-channelaccesstool" ||
    it.getPath() == ":openmuc-webui-channelconfigurator" ||
    it.getPath() == ":openmuc-webui-dataexporter" ||
    it.getPath() == ":openmuc-webui-dataplotter" ||
    it.getPath() == ":openmuc-webui-mediaviewer" ||
    it.getPath() == ":openmuc-webui-simpledemovisualisation" ||
    it.getPath() == ":openmuc-webui-spi" ||
    it.getPath() == ":openmuc-webui-userconfigurator"
  }

  docProjects = distributionProjects.findAll {
    it.getPath() == ":openmuc-core-api" ||
    it.getPath() == ":openmuc-core-spi" ||
    it.getPath() == ":openmuc-webui-spi"
  }

  repositoryProjects = distributionProjects

}

configure(javaProjects) {
  apply plugin: "java"
  apply plugin: "maven"


  uploadArchives {
    repositories {
      mavenDeployer {
        pom.project {
          licenses {
            license {
              name "GNU General Public License"
              url "http://www.gnu.org/copyleft/gpl-3.0.html"
              distribution "repo"
            }
          }
        }
      }
    }
  }

}

task updateBundles(type:Exec) {
  dependsOn(distributionProjects.install)
  commandLine "./framework/bin/openmuc", "update-bundles"
}

tasks.withType(Tar) {

  into(project.name) {

    from("build") {
      include "libs/**"
    }

    from("./") {
      include "LICENSE"
      include "dependencies/**"

    }

    if (name.equals("tar") ){
      exclude "**/dependencies/**/src"
    }
	
  }

  into(project.name + "/libs/") {
    from("build/libs-all") {
      include "openmuc-**"
    }
  }

  into(project.name + "/docs/") {
    from("./doc/") {
      include "CHANGELOG.txt"
      include "user-guide/**"
    }
    from("./build/docs/") {
      include "javadoc/**"
    }
  }

}
