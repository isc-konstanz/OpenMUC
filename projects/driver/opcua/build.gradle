
def projectName = "OpenMUC Driver - OPC UA"
def projectDescription = "OPC UA driver for the OpenMUC framework."

def miloVersion = '0.4.2'

configurations.create('embed')

repositories {
  mavenCentral()
}

dependencies {
  implementation project(':openmuc-core-spi')

  implementation group: 'org.eclipse.milo', name: 'sdk-server', version: miloVersion
  embed          group: 'org.eclipse.milo', name: 'sdk-server', version: miloVersion

  implementation group: 'org.eclipse.milo', name: 'sdk-client', version: miloVersion
  embed          group: 'org.eclipse.milo', name: 'sdk-client', version: miloVersion
}

def embed = configurations.embed.findAll {
  it.getName().matches("(stack|sdk|strict|netty|bc).*")
}

jar {
  into('libs') {
    from embed
  }
  manifest {
    attributes('Bundle-Name':        projectName,
               'Bundle-Description': projectDescription,
               'Bundle-ClassPath': '.,' + embed.collect { 'libs/'+it.getName() }.join(','),
               'Import-Package':     '!org.eclipse.*,' +
                                     '!io.netty.*,' +
                                     '!org.jboss.*,' +
                                     '!org.bouncycastle.*,' +
                                     '!org.apache.log*,' +
                                     '!org.apache.commons.log*,' +
                                     '!com.google.protobuf.nano.*,' +
                                     '!com.oracle.svm.*,' +
                                     '!com.digitalpetri.*,' +
                                     '!org.conscrypt.*,' +
                                     '!lzma.sdk.*,' +
                                     '!net.jpountz.*,' +
                                     '!com.jcraft.*,' +
                                     '!com.ning.*,' +
                                     '!com.sun.xml*,' +
                                     '!sun.security.*,' +
                                     '!sun.security.util.*,' +
                                     '!reactor.blockhound.*,' +
                                     '*'+jarDefaultImportPackageVersion,
	           'Export-Package':    '')
  }
}

uploadArchives {
  repositories {
    mavenDeployer {
      pom.project {
        name projectName
        description projectDescription
      }
    }
  }
}
