<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<options>
  <driver id="mbus">
    <name>M-Bus (wired)</name>
    <description><![CDATA[
        M-Bus (wired) is a protocol to read out meters.
      ]]>
    </description>
    
    <deviceAddress>
      <syntax>
        <keyValue>false</keyValue>
        <separator>:</separator>
      </syntax>
      <option id="serial_port">
        <name>Serial port</name>
        <description>The serial port should be given that connects to the M-Bus converter. (e.g. /dev/ttyS0, /dev/ttyUSB0 on Linux).</description>
        <mandatory>true</mandatory>
        <type>STRING</type>
      </option>
      <option id="mbus_address">
        <name>M-Bus address</name>
        <description><![CDATA[
            The M-Bus adress can either be the the primary address or secondary address of the meter.<br>
            A primary address is specified as integer (e.g. 1 for primary address 1) whereas the secondary address 
            consits of 8 bytes that should be specified in hexadecimal form. (e.g. e30456a6b72e3e4e).<br><br>
            The <a href='https://www.openmuc.org/m-bus/user-guide/#_wired_m_bus'>jMBus User Guide</a> can be 
            accessed for more detailed description.
          ]]>
        </description>
        <mandatory>true</mandatory>
        <type>STRING</type>
      </option>
    </deviceAddress>
    
    <deviceSettings>
      <syntax>
        <keyValue>false</keyValue>
        <separator>:</separator>
      </syntax>
      <option id="baud_rate">
        <name>Baudrate</name>
        <description><![CDATA[
            The baud rate for the serial communication. <br>
            Defaults to 2400bd.
          ]]>
        </description>
        <mandatory>false</mandatory>
        <type>INTEGER</type>
        <default>2400</default>
        <selection>
          <validate>false</validate>
          <item value="300">300</item>
          <item value="600">600</item>
          <item value="1200">1200</item>
          <item value="2400">2400</item>
          <item value="4800">4800</item>
          <item value="9600">9600</item>
          <item value="14400">14400</item>
          <item value="19200">19200</item>
          <item value="38400">38400</item>
        </selection>
      </option>
      <option id="timeout">
        <name>Timeout</name>
        <description><![CDATA[
            Defines the read timeout in ms. Default is 2500 ms.<br><br>
            <b>Example:</b> t5000 for a timeout of 5 seconds.
          ]]>
        </description>
        <mandatory>false</mandatory>
        <type>STRING</type>
        <default>t2500</default>
      </option>
    </deviceSettings>
    
    <deviceScanSettings>
      <syntax>
        <keyValue>false</keyValue>
        <separator>:</separator>
      </syntax>
      <option id="serial_port"></option>
      <option id="baud_rate"></option>
      <option id="scan_timeout">
        <name>Timeout</name>
        <description><![CDATA[
            Defines the scan timeout in ms. Default is 2500 ms.<br><br>
            <b>Example:</b> t5000 for a timeout of 5 seconds.
          ]]>
        </description>
        <mandatory>false</mandatory>
        <type>STRING</type>
        <default>t2500</default>
      </option>
      <option id="s">
        <name>Secondary Address Scan</name>
        <description>Enables the secondary address scan</description>
        <mandatory>false</mandatory>
        <type>STRING</type>
        <selection>
          <item value="">Disabled</item>
          <item value="s">Enabled</item>
        </selection>
      </option>
    </deviceScanSettings>
    
    <channelAddress>
      <syntax>
        <keyValue>false</keyValue>
        <separator>:</separator>
      </syntax>
      <option id="dib">
        <name>Data Information Block</name>
        <description><![CDATA[
            The DIB codes:
            <ol>
              <li><b>Storage number</b> – a meter can have several storages e.g. to store historical time series data. The storage number 0 signals an actual value.</li>
              <li><b>Function</b> – Data can have the following four function types: instantaneous value, max value, min value, value during error state.</li>
              <li><b>Data value type</b> – The length and coding of the data value field following the DIB and VIB. Possible value types are 8/16/24/32/48/64 bit integer, 32 bit real, 2/4/6/8/12 digit binary coded decimals (BCD), date and string. In addition the value type “none” exists to label data records that have no data value field.</li>
              <li><b>Tariff</b> – Indicates the tariff number of this data field. The data of tariff 0 is usually the sum of all other tariffs.</li>
              <li><b>Subunit</b> – Can be used by a slave to distinguish several subunits of the metering device.</li>
            </ol>
            <br>
            <i>If the code starts with an X then the specific data record will be selected for readout before reading it.</i>
          ]]>
        </description>
        <mandatory>true</mandatory>
        <type>STRING</type>
      </option>
      <option id="vib">
        <name>Value Information Block</name>
        <description><![CDATA[
            The VIB codes:
            <ol>
              <li><b>Description</b> – The meaning of the data value (e.g. “Energy”, “Volume” etc.)</li>
              <li><b>Unit</b> – The unit of the data value.</li>
              <li><b>Multiplier</b> – A factor by which the data value coded in the data field has to be multiplied with.</li>
            </ol>
          ]]>
        </description>
        <mandatory>true</mandatory>
        <type>STRING</type>
      </option>
    </channelAddress>
  </driver>
</options>
